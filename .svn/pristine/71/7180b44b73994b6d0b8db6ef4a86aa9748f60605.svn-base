<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amazingReader.mapper.BookMapper">

    <update id="removeBook">
        UPDATE book set book_statu = where bookId = #{param}
    </update>

    <delete id="removeByBookId" parameterType="int">
        DELETE FROM book WHERE book_id=#{_parameter}
    </delete>

    <select id="getBookById" parameterType="int" resultType="Book">
        SELECT * FROM book WHERE book_id=#{_parameter}
    </select>

    <select id="getBookByName" parameterType="String" resultType="Book">
        SELECT * FROM book WHERE book_name="#{_parameter}"
    </select>

    <select id="getBooksByLabelId" parameterType="int" resultType="Book">
        SELECT b.* FROM book b,book_label_relation blr WHERE b.book_id=blr.book_id and blr.label_id=#{_parameter}
    </select>

    <update id="addRecommendTicket">
        UPDATE book SET book_recommend_ticket = book_recommend_ticket+#{param1} WHERE book_id=#{param2}
    </update>

    <select id="getVisitBookBasic" resultType="Book">
     	SELECT * FROM book  ORDER BY book.book_collected_num DESC limit 10
    </select>
    <update id="collect">
        UPDATE book set book_collected_num = book_collected_num+1 WHERE book_id = #{_param}
    </update>

    <!--List<Book> getActivityBooks();-->
    <select id="getActivityBooks" resultType="Book">
        SELECT * from book where book_activity_statu = 1
    </select>
    <!--int getClickNum(int bookId);-->
    <select id="getClickNum" resultType="Integer">
        select COALESCE(sum(chapter_click_num),0) from chapter WHERE chapter_book_id = #{param};
    </select>

    <!--int getWordsNumOfBook(int bookId);-->
    <select id="getWordsNumOfBook" resultType="int">
        SELECT COALESCE (SUM(chapter_word_num),0)FROM chapter where chapter_book_id = #{_param}
    </select>
<!--public List<Book> getBooksByStyleId(int styleId);-->
    <select id="getBooksByStyleId" parameterType="int" resultType="Integer">
        select DISTINCT b.book_id from book b left join reader_hobby_relation rhr on b.book_id=rhr.hobby_reader_id
        where rhr.hobby_label_id=#{_parameter}
    </select>

    <!--List<Book> queryBooksOfMan();-->
    <select id="queryBooksOfMan" resultType="Integer">
      select book_id from book where book_style_id BETWEEN 1000 and 1099 or book_style_id BETWEEN 10000 and 10999
    </select>
    <!--List<Book> queryBooksOfWoman();-->
    <select id="queryBooksOfWoman" resultType="Integer">
         select book_id from book where book_style_id BETWEEN 1100 and 1199 or book_style_id BETWEEN 11000 and 11999

    </select>

    <!--//收入榜
    public List<Book> queryBookForIncome();-->
    <select id="queryBookForIncome" resultType="Integer">
        select b.book_id from book b LEFT JOIN reader_order_detail r on b.book_id=r.reader_order_detail_book_id GROUP BY b.book_id
        ORDER BY SUM(reader_order_detail_price) DESC
    </select>

    <!-- //推荐榜
     public List<Book> queryBookForRecommend();-->
    <select id="queryBookForRecommend" resultType="Integer">
        select book_id from book ORDER BY book_recommend_ticket DESC
    </select>

    <!--//热销榜
    public List<Book> queryBookForOrder();-->
    <select id="queryBookForOrder" resultType="Integer">
        select b.book_id from book b LEFT JOIN reader_order r on b.book_id=r.reader_order_object_id GROUP by b.book_id
        ORDER BY count(*) DESC
    </select>

    <!-- //收藏榜
   public List<Book> queryBookForCollect();-->
    <select id="queryBookForCollect" resultType="Integer">
        select book_id from book ORDER by book_collected_num DESC
    </select>

    <!--//打赏榜
    public List<Book> queryBookForReward();-->
    <select id="queryBookForReward" resultType="Integer">
          select b.book_id from book b LEFT JOIN reader_order r ON b.book_id =r.reader_order_object_id  where reader_order_type_id=2 GROUP BY b.book_id
           ORDER by SUM(reader_order_price) DESC
    </select>

    <!--//新书推荐
    public List<Book> queryBookForRecentCreate();-->
    <select id="queryBookForRecentCreate" resultType="Integer">
        select book_id from book ORDER BY book_push_date_time DESC
    </select>

    <!--//全本免费专区
   public List<Book> queryBookForFree();-->
    <select id="queryBookForFree" resultType="Integer">
        select book_id from book where book_activity_statu=1
    </select>

    <!--//限时免费
    public List<Book> queryBookForFreeOfTimeLimit();-->
    <select id="queryBookForFreeOfTimeLimit" resultType="Integer">

    </select>

    <!-- //完结专区
    public List<Book> queryBookForFinished();-->
    <select id="queryBookForFinished" resultType="Integer">
          select book_id from book where book_statu_id=2
    </select>


    <!--//女频热度排行榜
    public List<Book> queryBookForHotOfWoman();-->
    <select id="queryBookForHotOfWoman" resultType="Integer">
        select b.book_id from book b LEFT JOIN reader_order r on b.book_id=r.reader_order_object_id
				where book_style_id BETWEEN 1100 and 1199 or book_style_id BETWEEN 11000 and 11999
				GROUP by b.book_id
        ORDER BY count(*) DESC

    </select>

    <!--//男频热度排行榜
    public List<Book> queryBookForHotOfMan();-->
    <select id="queryBookForHotOfMan" resultType="Integer">
         select b.book_id from book b LEFT JOIN reader_order r on b.book_id=r.reader_order_object_id
         where book_style_id BETWEEN 1000 and 1099 or book_style_id BETWEEN 10000 and 10999
         GROUP by b.book_id
        ORDER BY count(*) DESC
    </select>


</mapper>