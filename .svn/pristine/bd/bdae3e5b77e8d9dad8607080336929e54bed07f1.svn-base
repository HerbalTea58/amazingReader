<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amazingReader.mapper.ReaderOrderDetailMapper">
    <!--boolean add(ReaderOrderDetail readerOrderDetail);-->
    <insert id="add" parameterType="ReaderOrderDetail">
        insert into reader_order_detail values(#{readerOrderId},#{readerOrderDetailChapterNum}
        ,#{readerOrderDetailBookId},#{readerOrderDetailPrice})
    </insert>
	<!--boolean alter(ReaderOrderDetail readerOrderDetail);-->
    <update id="alter" parameterType="ReaderOrderDetail">
        update reader_order_detail set reader_order_detail_chapter_num=#{readerOrderDetailChapterNum},
        reader_order_detail_book_id=#{readerOrderDetailBookId},reader_order_detail_price=#{readerOrderDetailPrice}
        where reader_order_id=#{readerOrderId}
    </update>
	<!--boolean remove(int ReaderOrderId);-->
    <delete id="remove" parameterType="int">
        delete from reader_order_detail where reader_order_id=#{_parameter}
    </delete>

	<!-- db验证 List<ReaderOrderDetail> getOrderDetail(int readerId,int orderId);-->
    <select id="getOrderDetail" resultType="ReaderOrderDetail">
        select reader_id,d.* from reader_order o,reader_order_detail d
        where o.reader_order_id = d.reader_order_id and o.reader_order_id=#{param2}
        and o.reader_id = #{param1}
    </select>
	<!-- db验证 ReaderOrderDetail getOrderDetailByOrderID(int orderId);-->
	<select id="getOrderDetailByOrderID" parameterType="int" resultType="ReaderOrderDetail">
		select * from reader_order_detail where reader_order_id=#{_parameter}
	</select>
	<!-- db验证 ReaderOrderDetail get(int readerId,int bookId,int chapterNum); -->
	<select id = "get" resultType="ReaderOrderDetail">
		select reader_id,d.* from reader_order o LEFT JOIN reader_order_detail d
		ON o.reader_order_id = d.reader_order_id
		where reader_order_detail_chapter_num=#{param3}
		and reader_order_detail_book_id=#{param2}
		and o.reader_id = #{param1}
	</select>

    <!--	/**
	 * 分类记录作者 收入
	 */
	Integer getWriterIncomeOfType( int type ,int writerId);

	/**
	 * 获取某位作者某月的书籍订阅收入
	 */
	-->
    <select id="getWriterIncomeOfType" resultType="Integer">
        select COALESCE (SUM(reader_order_detail_price),0)
        from reader_order_detail d,book b ,reader_order o
        where d.reader_order_detail_book_id = b.book_id and
         o.reader_order_id = d.reader_order_id and
         o.reader_order_type_id = #{param1} and b.book_writer_id = ${param2}
    </select>
    <!--Integer getWriterIncomeByYearAndMonth(int year,int month,int writerId);-->
    <select id="getWriterIncomeByYearAndMonth" resultType="Integer">
        SELECT COALESCE (sum(reader_order_price),0 )from reader_order_detail ,book
        where reader_order_time LIKE CONCAT( '%' , ${param1} , '-' ,${param2}, '%' ) AND
         reader_order_detail_book_id = book_id AND  book_writer_id = #{param3}
    </select>
    <!--<select id="getWriterIncomeByYearAndMonth" resultType="Integer">
       select sum(reader_order_price) from reader_order where reader_order_id in (
          SELECT reader_order_id from reader_order where reader_order_time like CONCAT(#{param1},"-",${param2},"%") and reader_order_object_id IN(
			select book_id from book where book_writer_id = ${param3}))
    </select>-->

    <!--Integer getWriterIncome(int writerId);-->
    <select id="getWriterIncome" resultType="Integer">
        select SUM(reader_order_price) from reader_order where reader_order_object_id in (
          select book_id from book where book_writer_id = #{_parameter}
          )
    </select>
</mapper>