package com.amazingReader.control.Chen;

import com.amazingReader.entity.Manager;
import com.amazingReader.entity.ReportChapter;
import com.amazingReader.entity.ReportComment;
import com.amazingReader.service.Interface.ChapterService;
import com.amazingReader.service.Interface.CommentService;
import com.amazingReader.service.Interface.ManagerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

@RequestMapping("/manager")
@RestController
public class ManagerControl {
    @Autowired
    private ManagerService managerService;
    @Autowired
    private CommentService commentService;
    @Autowired
    private ChapterService chapterService;
/*    @Autowired
    private ReaderService readerService;*/


    @RequestMapping("/login.action")
    public void login(Manager manager, HttpServletResponse response, HttpServletRequest request) throws IOException {
        manager.setManagerNeckname(request.getParameter("managerId"));
        Manager flag = managerService.login(manager);
        if (flag != null){
            request.getSession().setAttribute("manager",flag);
            response.sendRedirect("/managerPage.jsp");
        }else {
            response.sendRedirect("/managerLogin.jsp");
        }
    }

    @RequestMapping("/isNeckNameExist.action")
    public void checkName(HttpServletResponse response, HttpServletRequest request){
        String name = request.getParameter("name");
        try {
        PrintWriter pw = response.getWriter();
        if(name != null && managerService.getManagerInfo(((Manager)request.getSession().getAttribute("manager")).getManagerId()) != null){
                pw.write("true");
                return;
        }
        pw.write("false");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @RequestMapping("/getAllReportComment.action")
    public List<ReportComment> getAllReportComment(HttpServletRequest request) throws IOException {
//        Manager manager = (Manager) request.getSession().getAttribute("manager");
        Manager manager = new Manager();
        manager.setManagerId(1);
        manager.setManagerNeckname("男：历史");
        manager.setManagerPassword("123");

        return commentService.getAllReportComment(manager.getManagerId());
    }
    @RequestMapping("/getAllReportedChapter.action")
    public List<ReportChapter> getAllReportedChapter(HttpServletRequest request){
        Manager manager = new Manager();
        manager.setManagerId(1);
        manager.setManagerNeckname("男：历史");
        manager.setManagerPassword("123");

        return chapterService.getAllReportedChapter(manager.getManagerId());
    }

    @RequestMapping("/getToDealReportComment.action")
    public List<ReportComment> getToDealReportComment(HttpServletRequest request) throws IOException {
//        Manager manager = (Manager) request.getSession().getAttribute("manager");
        Manager manager = new Manager();
        manager.setManagerId(1);
        manager.setManagerNeckname("男：历史");
        manager.setManagerPassword("123");

        return commentService.getToDealReportComment(manager.getManagerId());
    }
    @RequestMapping("/getToDealReportedChapter.action")
    public List<ReportChapter> getToDealReportedChapter(HttpServletRequest request){
        Manager manager = new Manager();
        manager.setManagerId(1);
        manager.setManagerNeckname("男：历史");
        manager.setManagerPassword("123");

        return chapterService.getToDealReportedChapter(manager.getManagerId());
    }

    @RequestMapping("/getUserReportedTimes.action")
    public void getUserReportedTimes(HttpServletRequest request,HttpServletResponse response){

    }

}
